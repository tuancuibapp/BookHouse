@model List<DatabaseProvider.NewClassForUI.BookDetailOrder>
@{
    ViewBag.Title = "Cart";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Cart.css" rel="stylesheet" />

<p style="display: block; font-size: 20px;"><b>GIỎ HÀNG CỦA TÔI</b></p>
<table onclick="body_click()">
    <tr>
        <th>STT</th>
        <th>Tiêu đề</th>
        <th>Số lượng</th>
        <th>Đơn giá</th>
        <th>Tổng cộng</th>
        <th>Xóa</th>
    </tr>
    @{ var totalPriceCart = 0;}
    @for (int i = 1; i <= Model.Count(); i++)
    {
        <tr id="@Model[i-1].book.book.BookID">
            <th>@i</th>
            <td style="width: 500px;">
                @Model[i - 1].book.book.BookName
            </td>
            <th style="padding-left: 0px;">
                @{var tmpBookID = int.Parse(Model[i - 1].book.book.BookID);}
                <div class="plusMinus" onclick="change_product_quantity(@tmpBookID, 1)">+</div>
                @{var tmpID = "quantity" + Model[i - 1].book.book.BookID;}
                <div id="@tmpID" style="border: 0.01px solid grey; float: left; padding: 7px 15px;">@Model[i - 1].number</div>
                <div class="plusMinus" onclick="change_product_quantity(@tmpBookID, -1)">-</div>
            </th>
            <th>@Model[i - 1].price VNĐ</th>
            @{var totalPrice = Model[i - 1].price * Model[i - 1].number;
                totalPriceCart = (int)totalPriceCart + (int)totalPrice;}
            <th>@totalPrice VNĐ</th>
            <th>
                <div class="btn" style="margin-top: 20px;" onclick="delete_product(@tmpBookID)">Xóa</div>
            </th>
        </tr>
    }
    <tr class="notEffect" style="background-color: white;">
        <th></th>
        <td></td>
        <th></th>
        <th>Tổng cộng</th>
        <th style="color: red;">@totalPriceCart VNĐ</th>
        <th></th>
    </tr>
    <tr class="notEffect" style="background-color: white;">
        <th></th>
        <th style="display: flex; justify-content: center; width: 99.3%;"><div class="btn" style="background-color: black;" onclick="homepage()">Tiếp tục mua hàng</div></th>
        <th></th>
        <th colspan="2"><div class="btn" onclick="order_confirm(@totalPriceCart)">Xác nhận đơn hàng</div></th>
        <th></th>
    </tr>
</table>
<div id="ms" style="color:red;"></div>
<div id="mss" style="color:green;"></div>
<script>
    function body_click() {
        $("#mss").html('');
    }
    var IsRunning = false;
    function delete_product(i) {
        var tmp = "" + i;
        var tmpLength = tmp.length;
        for (let j = 0; j < 5 - tmpLength; j++) {
            tmp = "0" + tmp;
        }
        i = tmp;
        alert(i);
        if (!IsRunning) {
            IsRunning = true;
            var form = new FormData();
            form.append("bid", i);
            var xhr = new XMLHttpRequest();
            xhr.open("POST", domain + '/User/CartDeleteProduct', true);
            xhr.timeout = 30000;
            xhr.ontimeout = function () {
                $("#ms").html('Thời gian phản hồi quá lâu, vui lòng F5 và thử lại!');
                IsRunning = false;
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var r = xhr.responseText;
                    var j = JSON.parse(r);
                    if (j.Data.status == "OK") {
                        $("#" + i).remove();
                        $('#mss').html("Sản phẩm đã được xóa khỏi giỏ hàng!");
                    }
                    else
                        $('#ms').html("Không thể xóa dữ liệu trong cơ sở dữ liệu!");
                    IsRunning = false;
                }
            }
            xhr.send(form);
            console.log("send");
        }
    }
    function order_confirm(totalPrice) {
        window.location.href = '@Url.Action("OrderConfirm", "User")' + '?totalPrice=' + totalPrice;
    }
    function homepage() {
        window.location = '/user/homepage';
    }
    function change_product_quantity(bid, i) {
        var tmp = "0";
        tmp = tmp + bid;
        var tmpLength = tmp.length;
        for (let j = 0; j < 5 - tmpLength; j++) {
            tmp = "0" + tmp;
        }
        tmp = "#quantity" + tmp;
        var quantity = parseInt($(tmp).html());
        quantity = quantity + i;
        if (quantity == 0) {
            $(tmp).html(quantity);
            delete_product(bid);
        } else if (quantity > 0) {
            $(tmp).html(quantity);
            save_product_quantity(bid, quantity);
        }
    }
    function save_product_quantity(bid, number) {
        var tmp = "0" + bid;
        var tmpLength = tmp.length;
        for (let j = 0; j < 5 - tmpLength; j++) {
            tmp = "0" + tmp;
        }
        bid = tmp;
        alert("bidnene:" + bid);
        if (!IsRunning) {
            IsRunning = true;
            var form = new FormData();
            form.append("bid", bid);
            form.append("number", number);
            var xhr = new XMLHttpRequest();
            xhr.open("POST", domain + '/User/CartUpdateProduct', true);
            xhr.timeout = 30000;
            xhr.ontimeout = function () {
                $("#ms").html('Thời gian phản hồi quá lâu, vui lòng F5 và thử lại!');
                IsRunning = false;
            }
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var r = xhr.responseText;
                    var j = JSON.parse(r);
                    if (j.Data.status == "OK") {
                        $('#mss').html("Sản phẩm đã được cập nhật số lượng!");
                    }
                    else
                        $('#ms').html("Không thể cập nhật số lượng trong cơ sở dữ liệu!");
                    IsRunning = false;
                }
            }
            xhr.send(form);
            console.log("send");
        }
    }
</script>



